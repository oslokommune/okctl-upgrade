{
  "affinity": {},
  "alerting_groups": [],
  "annotations": {},
  "client": {},
  "config": {
    "auth_enabled": false,
    "chunk_store_config": {
      "max_look_back_period": "0s"
    },
    "compactor": {
      "shared_store": "filesystem",
      "working_directory": "/data/loki/boltdb-shipper-compactor"
    },
    "ingester": {
      "chunk_block_size": 262144,
      "chunk_idle_period": "3m",
      "chunk_retain_period": "1m",
      "lifecycler": {
        "ring": {
          "kvstore": {
            "store": "inmemory"
          },
          "replication_factor": 1
        }
      },
      "max_transfer_retries": 0
    },
    "limits_config": {
      "enforce_metric_name": false,
      "reject_old_samples": true,
      "reject_old_samples_max_age": "168h"
    },
    "schema_config": {
      "configs": [
        {
          "from": "2020-10-24",
          "index": {
            "period": "24h",
            "prefix": "index_"
          },
          "object_store": "filesystem",
          "schema": "v11",
          "store": "boltdb-shipper"
        },
        {
          "from": "2022-05-09",
          "store": "aws",
          "object_store": "s3",
          "schema": "v11",
          "index": {
            "prefix": "okctl-mock-cluster-loki-index_",
            "period": "336h"
          }
        }
      ]
    },
    "server": {
      "http_listen_port": 3100
    },
    "storage_config": {
      "boltdb_shipper": {
        "active_index_directory": "/data/loki/boltdb-shipper-active",
        "cache_location": "/data/loki/boltdb-shipper-cache",
        "cache_ttl": "24h",
        "shared_store": "filesystem"
      },
      "filesystem": {
        "directory": "/data/loki/chunks"
      },
      "aws": {
        "s3": "s3://eu-test-1",
        "bucketnames": "mock-bucket",
        "dynamodb": {
          "dynamodb_url": "dynamodb://eu-test-1"
        }
      }
    },
    "table_manager": {
      "retention_deletes_enabled": true,
      "retention_period": "1344h",
      "index_tables_provisioning": {
        "provisioned_write_throughput": 1,
        "provisioned_read_throughput": 1,
        "inactive_write_throughput": 1,
        "inactive_read_throughput": 1
      }
    }
  },
  "env": [],
  "extraArgs": {},
  "extraContainers": [],
  "extraPorts": [],
  "extraVolumeMounts": [],
  "extraVolumes": [],
  "image": {
    "pullPolicy": "IfNotPresent",
    "repository": "grafana/loki",
    "tag": "2.1.0"
  },
  "ingress": {
    "annotations": {},
    "enabled": false,
    "hosts": [
      {
        "host": "chart-example.local",
        "paths": []
      }
    ],
    "tls": []
  },
  "initContainers": [],
  "livenessProbe": {
    "httpGet": {
      "path": "/ready",
      "port": "http-metrics"
    },
    "initialDelaySeconds": 45
  },
  "networkPolicy": {
    "enabled": false
  },
  "nodeSelector": {},
  "persistence": {
    "accessModes": [
      "ReadWriteOnce"
    ],
    "annotations": {},
    "enabled": false,
    "size": "10Gi"
  },
  "podAnnotations": {
    "prometheus.io/port": "http-metrics",
    "prometheus.io/scrape": "true"
  },
  "podDisruptionBudget": {},
  "podLabels": {},
  "podManagementPolicy": "OrderedReady",
  "rbac": {
    "create": true,
    "pspEnabled": true
  },
  "readinessProbe": {
    "httpGet": {
      "path": "/ready",
      "port": "http-metrics"
    },
    "initialDelaySeconds": 45
  },
  "replicas": 1,
  "resources": {
    "limits": {
      "cpu": "1000m",
      "memory": "1000Mi"
    },
    "requests": {
      "cpu": "500m",
      "memory": "750Mi"
    }
  },
  "securityContext": {
    "fsGroup": 10001,
    "runAsGroup": 10001,
    "runAsNonRoot": true,
    "runAsUser": 10001
  },
  "service": {
    "annotations": {},
    "labels": {},
    "nodePort": null,
    "port": 3100,
    "targetPort": "http-metrics",
    "type": "ClusterIP"
  },
  "serviceAccount": {
    "create": false,
    "name": "loki",
    "annotations": {}
  },
  "serviceMonitor": {
    "additionalLabels": {},
    "annotations": {},
    "enabled": false,
    "interval": ""
  },
  "terminationGracePeriodSeconds": 4800,
  "tolerations": [],
  "tracing": {
    "jaegerAgentHost": null
  },
  "updateStrategy": {
    "type": "RollingUpdate"
  }
}