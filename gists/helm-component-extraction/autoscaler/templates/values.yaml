additionalLabels: {}
affinity: {}
autoDiscovery:
  clusterName: ${CLUSTER_NAME}
  roles:
  - worker
  tags:
  - k8s.io/cluster-autoscaler/enabled
  - k8s.io/cluster-autoscaler/${CLUSTER_NAME}
autoscalingGroups: []
autoscalingGroupsnamePrefix: []
awsAccessKeyID: ""
awsRegion: ${AWS_REGION}
awsSecretAccessKey: ""
azureClientID: ""
azureClientSecret: ""
azureClusterName: ""
azureNodeResourceGroup: ""
azureResourceGroup: ""
azureSubscriptionID: ""
azureTenantID: ""
azureUseManagedIdentityExtension: false
azureVMType: AKS
cloudConfigPath: /etc/gce.conf
cloudProvider: aws
containerSecurityContext: {}
dnsPolicy: ClusterFirst
envFromConfigMap: ""
envFromSecret: ""
expanderPriorities: {}
extraArgs:
  logtostderr: true
  stderrthreshold: info
  v: 4
extraEnv: {}
extraEnvConfigMaps: {}
extraEnvSecrets: {}
extraVolumeMounts: []
extraVolumeSecrets: {}
extraVolumes: []
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  pullSecrets: []
  repository: us.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler
  tag: v1.18.1
kubeTargetVersionOverride: ""
magnumCABundlePath: /etc/kubernetes/ca-bundle.crt
magnumClusterName: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podDisruptionBudget:
  maxUnavailable: 1
podLabels: {}
priorityClassName: ""
rbac:
  create: true
  pspEnabled: false
  serviceAccount:
    annotations: {}
    create: false
    name: autoscaler
replicaCount: 1
resources:
  limits:
    cpu: 300m
    memory: 750Mi
  requests:
    cpu: 200m
    memory: 500Mi
securityContext: {}
service:
  annotations: {}
  externalIPs: []
  labels: {}
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  portName: http
  servicePort: 8085
  type: ClusterIP
serviceMonitor:
  enabled: false
  interval: 10s
  namespace: monitoring
  path: /metrics
  selector:
    release: prometheus-operator
tolerations: []
updateStrategy: {}
